Q1. What happens if you try insertMany([]) with an empty array?
Answer: It throws MongoInvalidArgumentError: Invalid BulkOperation, Batch cannot be empty because MongoDB requires at least one document.

Q2. What’s the correct command to view all documents from a collection named Teacher?
Answer: db.Teacher.find()

Q3. What will happen if you try db.Studnt.find() but only student collection exists?
Answer: It returns nothing (empty array) because there is no collection named Studnt.

Q4. Is show collections.Teacher a valid MongoDB command?
Answer: ❌ No. You should use show collections and then query using db.Teacher.find().

Q5. After switching to a database using use test, why doesn’t it show up in show dbs?
Answer: A database is not actually created until you insert at least one document in it.

# _id field - Automatically generated by MongoDB as the unique identifier for each document.
# Case Sensitivity - Collection names are case-sensitive: Teacher ≠ teacher.
# If you ever want to pretty-print the find() result: - test> db.Teacher.find().pretty()

Summary of Key Learnings:
Command	-Purpose	-Notes
db.collection.insertOne()    -  Insert a single document   -  Must provide a valid JSON object
db.collection.insertMany([]) - Insert multiple documents -   ❌ Fails if array is empty
show collections	     - Lists all collection names	-    ✅ No chaining allowed
db.collection.find()	- Shows documents from collection	 - Case-sensitive and typo-sensitive
use <db>	 -        Switches database	-    Doesn’t create it unless insert occurs


Basic Syntax
The find() method takes two optional arguments:

query (or filter): A document that specifies the selection criteria (which documents to return). If omitted or an empty document ({}), all documents in the collection are returned.

projection: A document that specifies which fields to include or exclude from the returned documents.

The general syntax is:

db.collection.find(query, projection)


> no sql
>MongoDB
> Basic Architecture of MongoDB
> Storage Format: BSON
> what is db / use <db>
> Schema
> what is collection / show collections / db.collection.find() / What is a Collection
>insertOne()
>insertMany()
>find()
>findOne()
>updateOne()
>updateMany()
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>